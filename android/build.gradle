import org.gradle.jvm.toolchain.JavaLanguageVersion
import org.gradle.jvm.toolchain.JvmVendorSpec

buildscript {
    ext.kotlin_version = '1.9.20'
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:8.4.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'java'
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

rootProject.buildDir = '../build'
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}
subprojects {
    project.evaluationDependsOn(':app')
}

gradle.settingsEvaluated { settings ->
    def svc = settings.gradle.sharedServices
        .registerIfAbsent("java17Launcher", org.gradle.jvm.toolchain.JavaToolchainService) { spec -> }
        .flatMap {
            it.launcherFor {
                languageVersion = JavaLanguageVersion.of(17)
                vendor = JvmVendorSpec.AMAZON
            }
        }

    settings.gradle.startParameter.javaHome = svc.get().metadata.installationPath.asFile
}

subprojects { subproject ->
    subproject.plugins.withId('com.android.library') {
        def manifest = subproject.file('src/main/AndroidManifest.xml')
        if (manifest.exists()) {
            def matcher = manifest.getText('UTF-8') =~ /package="([^"]+)"/
            if (matcher.find()) {
                subproject.android.namespace = matcher.group(1)
            }
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
        vendor = JvmVendorSpec.AMAZON
    }
}
